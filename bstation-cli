#!/bin/sh

tmp="$PWD/.bstation-cli_tmp"
session_tmp="$PWD/.bstation-cli_session"
session=""
sub_tmp="$PWD/.subtitle.bcc"
sub_path="$PWD/.subtitle.srt"
query=""
anime_id=""
episode_id=""

get_session() {
    if [ -f "$session_tmp" ]; then
        session=`sed -n 5p "$session_tmp" | sed 's/.*buvid3\t//'`
    else
        curl -c "$session_tmp" -s "https://www.bilibili.tv" > /dev/null
        session=`sed -n 5p "$session_tmp" | sed 's/.*buvid3\t//'`
    fi
}

search_anime() {
    curl -s "https://api.bilibili.tv/intl/gateway/web/v2/search?buvid=$session&keyword=$query&platform=web&pn=1&ps=20&qid=&s_locale=en_US&timezone=GMT%2B07" \
        | sed 's/^.*"module":"ogv",//;s/,{"module":"ugc",.*$//' \
        | sed 's/,/,\n/g' | grep "{\"title\":\|\"season_id\"" \
        | sed 's/"items":\[//' > "$tmp"
}

get_episode() {
    total_episode=`cat "$tmp" | wc -l`
    selected_episode=0
    echo -n "Choose episode [1-$total_episode]: "
    read selected_episode
    if [ $selected_episode -gt 0 ] && [ $selected_episode -le $total_episode ]; then
        episode_id=`sed -n ${selected_episode}p "$tmp"`
    else
        echo "Invalid number."
    fi
}

convert_sub() {
    total_lines=`sed 's/^.*:\[//;s/},/\n/g' "$sub_tmp" | wc -l`
    total_lines=$(( total_lines += 1 ))
    curr_line=1

    while [ $curr_line -le $total_lines ]; do
        from_msecs=`sed 's/^.*:\[//;s/},/\n/g' "$sub_tmp" | sed -n ${curr_line}p | sed 's/^.*from\"://;s/,\"to.*$//;s/^.*\.//'`
        from_secs=`sed 's/^.*:\[//;s/},/\n/g' "$sub_tmp" | sed -n ${curr_line}p | sed 's/^.*from\"://;s/,\"to.*$//;s/\..*$//'`

        if [ $from_secs -ge 3600 ]; then
            from_hrs=$(( $from_secs / 3600 ))
            if [ $from_hrs -ge 1 ] && [ $from_hrs -le 9 ]; then
                from_hrs=0$from_hrs
            fi
            from_secs=$(( $from_secs % 3600 ))
        else
            from_hrs=00
        fi

        if [ $from_secs -ge 60 ]; then
            from_mins=$(( $from_secs / 60 ))
            if [ $from_mins -ge 1 ] && [ $from_mins -le 9 ]; then
                from_mins=0$from_mins
            fi
            from_secs=$(( $from_secs % 60 ))
        else
            from_mins=00
        fi

        to_msecs=`sed 's/^.*:\[//;s/},/\n/g' "$sub_tmp" | sed -n ${curr_line}p | sed 's/^.*to\"://;s/,.*$//;s/^.*\.//'`
        to_secs=`sed 's/^.*:\[//;s/},/\n/g' "$sub_tmp" | sed -n ${curr_line}p | sed 's/^.*to\"://;s/,.*$//;s/\..*$//'`

        if [ $to_secs -ge 3600 ]; then
            to_hrs=$(( $to_secs / 3600 ))
            if [ $to_hrs -ge 1 ] && [ $to -le 9 ]; then
                to_hrs=0$to_hrs
            fi
            to_secs=$(( $to_secs % 3600 ))
        else
            to_hrs=00
        fi

        if [ $to_secs -ge 60 ]; then
            to_mins=$(( $to_secs / 60 ))
            if [ $to_mins -ge 1 ] && [ $to_mins -le 9 ]; then
                to_mins=0$to_mins
            fi
            to_secs=$(( $to_secs % 60 ))
        else
            to_mins=00
        fi

        echo $curr_line >> "$sub_path"
        echo ${from_hrs}:${from_mins}:${from_secs},${from_msecs} \-\-\> ${to_hrs}:${to_mins}:${to_secs},${to_msecs} >> "$sub_path"

        sed 's/^.*:\[//;s/},/\n/g' "$sub_tmp" | sed -n ${curr_line}p | sed 's/^.*content\":\"//;s/\"$//;s/\\n/\n/g;s/\\//g;s/u003ciu003e//g;s/u003c\/iu003e//g' >> "$sub_path"
        
        echo >> "$sub_path"
        curr_line=$(( curr_line += 1 ))
    done
}

watch_anime() {
    curl -s "https://api.bilibili.tv/intl/gateway/web/playurl?buvid=$session&device=wap&ep_id=$episode_id&platform=web&qn=64&s_locale=en_US&tf=0&timezone=GMT%2B07&type=0" > "$tmp"

    video_url=`sed 's/480P.*$//;s/^.*720P.*\"url\"//' "$tmp" \
        | cut -d\" -f 2 \
        | sed 's/\\\u0026/\&/g'`

    audio_url=`sed 's/^.*\"audio_resource\"//;s/^.*30216.*\"url\"//' "$tmp" \
        | cut -d\" -f 2 \
        | sed 's/\\\u0026/\&/g'`

    curl -s "https://api.bilibili.tv/intl/gateway/web/v2/subtitle?buvid=$session&episode_id=$episode_id&platform=web&s_locale=en_US&timezone=GMT%2B07" > "$tmp"

    sub_url=`sed 's/\"English\",.*$//;s/^.*\"url\"//' "$tmp" \
        | cut -d\" -f 2`

    curl -s "$sub_url" > "$sub_tmp"

    echo "Converting subtitle..."
    rm -f "$sub_path"; convert_sub
    echo "Playing..."
    mpv "$video_url" --audio-file="$audio_url" --sub-file="$sub_path" --sub-font-size=32 > /dev/null 2>&1 
}

######
# MAIN
######

get_session

tmp_query=""
echo -n "Search Anime: "
read tmp_query
echo $tmp_query > "$tmp"
query=`sed 's/\ /\+/g' "$tmp"`

search_anime

title_num=1
list_num=1
selected_anime=0
title=`sed -n ${title_num}p "$tmp"`

if [ -z "$title" ]; then
    echo "No result."
else
    while [ -n "$title" ]; do
        echo -n "[$list_num] "
        sed -n ${title_num}p "$tmp" | cut -d\" -f 4 | sed 's/^\ *//'
        list_num=$(( list_num += 1 ))
        title_num=$(( title_num += 2 ))
        title=`sed -n ${title_num}p "$tmp"`
    done
    
    echo -n "Enter number: "
    read selected_anime
    if [ $selected_anime -gt 0 ] && [ $selected_anime -lt $list_num ]; then
        selected_anime=$(( selected_anime *= 2 ))
        anime_id=`sed -n ${selected_anime}p "$tmp" | cut -d: -f 2 | sed 's/,//'`
        curl -b "$session_tmp" -s "https://www.bilibili.tv/en/play/$anime_id" \
            | grep "^.*active\"><a href=\"/en/play/$anime_id/.*\"\|^.*card\"><a href=\"/en/play/$anime_id/.*\"" \
            | sed "s/^.*\/en\/play\/$anime_id\///;s/\".*$//" > "$tmp"
        get_episode
        watch_anime
    else
        echo "Invalid number."
    fi
fi

rm -f "$tmp"
rm -f "$sub_tmp"
rm -f "$sub_path"
